FROM node:18

# Cloud66 will inject environment variables
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# Define build arguments for environment variables
ARG OPEN_PEER_API_URL
ARG NEXT_PUBLIC_API_WS_URL
ARG NEXT_PUBLIC_API_BASE_URL
ARG NEXT_PUBLIC_FEE_RECEPIENT
ARG NEXT_PUBLIC_ARBITRATOR_ADDRESS
ARG NEXT_PUBLIC_SOLANA_PROGRAM_ID
ARG NEXT_PUBLIC_FEE_PAYER
ARG DISPUTE_FEE
ARG OPENPEER_FEE
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_IMAGES_BUCKET
ARG AWS_REGION
ARG AWS_CLOUD_FRONT
ARG NEXT_PUBLIC_AWS_CLOUD_FRONT
ARG NEXT_PUBLIC_KNOCK_API_KEY
ARG NEXT_PUBLIC_KNOCK_FEED_ID
ARG KNOCK_API_KEY
ARG KNOCK_SIGNING_KEY
ARG COINGECKO_API_KEY
ARG NEXT_PUBLIC_DYNAMIC_ENVIRONMENT_ID
ARG NEXT_DYNAMIC_BEARER_TOKEN
ARG DYNAMIC_PUBLIC_KEY
ARG NEXT_PUBLIC_TALKJS_APP_ID
ARG TALKJS_SECRET_KEY
ARG NEXT_PUBLIC_INTERCOM_APP_ID
ARG NEXT_PUBLIC_GA_MEASUREMENT_ID
ARG NEXT_PUBLIC_SOLANA_NETWORK
ARG NEXT_PUBLIC_SOLANA_RPC
ARG TELEGRAM_BOT_TOKEN
ARG NEXT_PUBLIC_TELEGRAM_BOT_NAME

WORKDIR /app

# Install system dependencies
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install curl zip libvips-dev libvips-tools -y && \
    rm -rf /var/lib/apt/lists/*

# Install global dependencies
RUN npm install -g postcss postcss-cli autoprefixer tailwindcss

# Copy package management files
COPY package*.json ./
COPY tsconfig*.json ./
COPY postcss.config.js ./
COPY tailwind.config.ts ./
COPY next.config.js ./

# Clear npm cache and install dependencies
RUN npm cache clean --force

# Install dependencies including dev dependencies
RUN npm ci --include=dev && \
    npm install --save-dev \
    autoprefixer@10.4.13 \
    postcss@8.4.19 \
    tailwindcss@3.3.3 \
    @tailwindcss/forms@0.5.8 \
    typescript@5.1.6

# Additional safety check for PostCSS dependencies
RUN npm list autoprefixer || npm install --save-dev autoprefixer@10.4.13 && \
    npm list postcss || npm install --save-dev postcss@8.4.19 && \
    npm list tailwindcss || npm install --save-dev tailwindcss@3.3.3

# Copy the rest of the application
COPY . .

# Create a .env.production file from Cloud66 environment variables
RUN echo "OPEN_PEER_API_URL=${OPEN_PEER_API_URL}\n\
NEXT_PUBLIC_API_WS_URL=${NEXT_PUBLIC_API_WS_URL}\n\
NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}\n\
NEXT_PUBLIC_FEE_RECEPIENT=${NEXT_PUBLIC_FEE_RECEPIENT}\n\
NEXT_PUBLIC_ARBITRATOR_ADDRESS=${NEXT_PUBLIC_ARBITRATOR_ADDRESS}\n\
NEXT_PUBLIC_SOLANA_PROGRAM_ID=${NEXT_PUBLIC_SOLANA_PROGRAM_ID}\n\
NEXT_PUBLIC_FEE_PAYER=${NEXT_PUBLIC_FEE_PAYER}\n\
DISPUTE_FEE=${DISPUTE_FEE}\n\
OPENPEER_FEE=${OPENPEER_FEE}\n\
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n\
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n\
AWS_IMAGES_BUCKET=${AWS_IMAGES_BUCKET}\n\
AWS_REGION=${AWS_REGION}\n\
AWS_CLOUD_FRONT=${AWS_CLOUD_FRONT}\n\
NEXT_PUBLIC_AWS_CLOUD_FRONT=${NEXT_PUBLIC_AWS_CLOUD_FRONT}\n\
NEXT_PUBLIC_KNOCK_API_KEY=${NEXT_PUBLIC_KNOCK_API_KEY}\n\
NEXT_PUBLIC_KNOCK_FEED_ID=${NEXT_PUBLIC_KNOCK_FEED_ID}\n\
KNOCK_API_KEY=${KNOCK_API_KEY}\n\
KNOCK_SIGNING_KEY=${KNOCK_SIGNING_KEY}\n\
COINGECKO_API_KEY=${COINGECKO_API_KEY}\n\
NEXT_PUBLIC_DYNAMIC_ENVIRONMENT_ID=${NEXT_PUBLIC_DYNAMIC_ENVIRONMENT_ID}\n\
NEXT_DYNAMIC_BEARER_TOKEN=${NEXT_DYNAMIC_BEARER_TOKEN}\n\
DYNAMIC_PUBLIC_KEY='${DYNAMIC_PUBLIC_KEY}'\n\
NEXT_PUBLIC_TALKJS_APP_ID=${NEXT_PUBLIC_TALKJS_APP_ID}\n\
TALKJS_SECRET_KEY=${TALKJS_SECRET_KEY}\n\
NEXT_PUBLIC_INTERCOM_APP_ID=${NEXT_PUBLIC_INTERCOM_APP_ID}\n\
NEXT_PUBLIC_GA_MEASUREMENT_ID=${NEXT_PUBLIC_GA_MEASUREMENT_ID}\n\
NEXT_PUBLIC_SOLANA_NETWORK=${NEXT_PUBLIC_SOLANA_NETWORK}\n\
NEXT_PUBLIC_SOLANA_RPC=${NEXT_PUBLIC_SOLANA_RPC}\n\
TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}\n\
NEXT_PUBLIC_TELEGRAM_BOT_NAME=${NEXT_PUBLIC_TELEGRAM_BOT_NAME}\n\
NODE_ENV=production" > .env.production

# Build the application
RUN npm run build

# Start the application
CMD ["npm", "start"]